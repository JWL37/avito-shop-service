// Code generated by MockGen. DO NOT EDIT.
// Source: sendCoin.go

// Package sendcoin is a generated GoMock package.
package sendcoin

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCoinSender is a mock of CoinSender interface.
type MockCoinSender struct {
	ctrl     *gomock.Controller
	recorder *MockCoinSenderMockRecorder
}

// MockCoinSenderMockRecorder is the mock recorder for MockCoinSender.
type MockCoinSenderMockRecorder struct {
	mock *MockCoinSender
}

// NewMockCoinSender creates a new mock instance.
func NewMockCoinSender(ctrl *gomock.Controller) *MockCoinSender {
	mock := &MockCoinSender{ctrl: ctrl}
	mock.recorder = &MockCoinSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoinSender) EXPECT() *MockCoinSenderMockRecorder {
	return m.recorder
}

// SendCoin mocks base method.
func (m *MockCoinSender) SendCoin(arg0 context.Context, arg1, arg2 string, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCoin", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendCoin indicates an expected call of SendCoin.
func (mr *MockCoinSenderMockRecorder) SendCoin(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCoin", reflect.TypeOf((*MockCoinSender)(nil).SendCoin), arg0, arg1, arg2, arg3)
}
